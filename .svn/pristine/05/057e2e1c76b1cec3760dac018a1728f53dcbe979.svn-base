<template>
  <div>
    <div class="demo-split">
      <div slot="top" class="demo-split-pane">
        <div class="btn">
          <Button type="info" @click="start(index)">启用</Button>
          <Button type="primary" @click="remove1(index)">删除</Button>
          <Button type="success" @click="setUser(data,index)">修改</Button>
          <Button type="warning" @click="cancel1">注销</Button>
          <Button type="error" @click="addUser">新增</Button>
        </div>
      </div>
    </div>
    <div slot="bottom" class="pane">
      搜索
      <Input v-model="keywords" placeholder="请输入姓名进行搜索..." style="width: 300px" />
      <Button type="primary" @click="search1(keywords)">搜索</Button>
    </div>
    <div>
      <Table
        @on-row-click="getIndex"
        highlight-row
        :columns="columns1"
        :data="list"
        :loading="loading"
      ></Table>
    </div>
    <Modal v-model="modal6" title="删除操作" @on-ok="onOK(index)">
      <p>确定删除吗？</p>
    </Modal>
    <Modal v-model="addMessage" title="新增账号" :draggable="true">
      <div>
        <Form ref="formValidate1" :model="formValidate1" :rules="ruleValidate1" :label-width="80">
          <FormItem label="工号" prop="gonghao">
            <Input v-model="formValidate1.gonghao"/>
          </FormItem>
          <FormItem label="姓名" prop="name">
            <Input v-model="formValidate1.name"/>
          </FormItem>
          <FormItem label="账号" prop="username">
            <Input v-model="formValidate1.username"/>
          </FormItem>
          <FormItem label="密码" prop="password">
            <Input v-model="formValidate1.password"/>
          </FormItem>
        </Form>
        <p v-if="showToast" class="toast">请补充完整</p>
      </div>
      <div slot="footer">
        <Button type="text" size="large" @click="cancel">取消</Button>
        <Button type="primary" size="large" @click="isAdd">确定</Button>
      </div>
    </Modal>
    <!-- 修改信息 -->
    <Modal v-model="setMessage" title="修改信息" :draggable="true">
      <div>
        <Form ref="formValidate" :model="formValidate" :rules="ruleValidate" :label-width="80">
          <FormItem label="姓名" prop="name">
            <Input v-model="formValidate.name"/>
          </FormItem>
          <FormItem label="账号" prop="username">
            <Input v-model="formValidate.username"/>
          </FormItem>
        </Form>
        <p v-if="showToast" class="toast">请补充完整</p>
      </div>
      <div slot="footer">
        <Button type="text" size="large" @click="cancel">取消</Button>
        <Button type="primary" size="large" @click="isset(index)">确定</Button>
      </div>
    </Modal>
  </div>
</template>

<script>
import axios from 'axios'
export default {
  data () {
    return {
      gonghao: '',
      name: '',
      password: '',
      username: '',
      total: 20,
      modal6: false,
      addMessage: false,
      setMessage: false,
      keywords: '',
      index: '',
      loading: true,
      toastName: '为必填项',
      toastUsername: '为必填项',
      toastPsd: '为必填项',
      pageSize: 5, // 每页条数
      list: [],
      pageNo: 1,
      showToast: false,
      formValidate: {
        name: '',
        username: ''
      },
      ruleValidate: {
        name: [{ required: true, message: '姓名不能为空', trigger: 'blur' }],
        username: [{ required: true, message: '账号不能为空', trigger: 'blur' }]
      },
      formValidate1: {
        gonghao: '',
        name: '',
        username: '',
        password: ''
      },
      ruleValidate1: {
        password: [
          { required: true, message: '密码不能为空', trigger: 'blur' }
        ],
        name: [{ required: true, message: '姓名不能为空', trigger: 'blur' }],
        username: [{ required: true, message: '账号不能为空', trigger: 'blur' }]
      },
      columns1: [
        {
          title: '工号',
          key: 'id'
        },
        {
          title: '姓名',
          key: 'name'
        },
        {
          title: '账号名',
          key: 'username'
        },
        {
          title: '登录次数',
          key: 'loginIn'
        },
        {
          title: '登录时间',
          key: 'loginTime'
        },
        {
          title: 'IP',
          key: 'ip'
        },
        {
          title: '状态',
          key: 'staic'
        },
        {
          title: '录入时间',
          key: 'loginTime'
        },
        {
          title: '创建人',
          key: 'username'
        }
      ],
      data: ''
    }
  },
  mounted () {
    axios({
      url: 'http://www.baidu.com/users'
    }).then(res => {
      // console.log(res.data.list)
      this.list = res.data.list
    })
    setTimeout(() => {
      this.loading = false
    }, 1000)
  },
  methods: {
    remove (index) {
      this.list.splice(index, 1)
      // console.log(this.list)
    },
    // 拿到点击某行的index
    getIndex (data, index) {
      // console.log(data,index)
      this.index = index
      this.data = data
    },
    // 点击删除按钮  确认删除提示
    remove1 (index) {
      if (typeof index === 'number') {
        this.modal6 = true
      } else {
        this.$Message.info('请选择一项进行操作')
      }
    },
    onOK (index) {
      this.list.splice(index, 1)
      this.index = ''
    },
    // 新增数据
    addUser () {
      this.addMessage = true
    },
    // 确定添加 （这里只是本地添加，没有传输到服务器）
    isAdd () {
      // console.log(this.name,this.username,this.password,this.gonghao)
      if (!this.formValidate1.name) {
        this.toastName = '请输入姓名'
      }
      if (!this.formValidate1.username) {
        this.toastUsername = '请输入账号名'
      }
      if (!this.formValidate1.password) {
        this.toastPsd = '请输入密码'
      }
      if (
        this.formValidate1.name &&
        this.formValidate1.username &&
        this.formValidate1.password
      ) {
        var obj = {
          id: this.formValidate1.gonghao,
          name: this.formValidate1.name,
          username: this.formValidate1.username
        }
        this.list.unshift(obj)
        this.addMessage = false
        this.showToast = false

        this.formValidate1.gonghao = ''
        this.formValidate1.name = ''
        this.formValidate1.username = ''
        this.formValidate1.password = ''
      } else {
        this.showToast = true
      }
    },
    // 关闭添加信息框
    cancel () {
      this.addMessage = false
      this.setMessage = false
    },
    // 定义搜索方法
    search (keywords) {
      return this.list.filter(item => {
        if (item.name.includes(keywords)) {
          return item
        }
      })
    },
    // 调用搜索方法，通过关键词进行搜索
    search1 (keywords) {
      var arr = this.search(keywords)
      this.list = arr
      if (!keywords) {
        axios({
          url: 'http://www.baidu.com/users'
        }).then(res => {
          // console.log(res.data.list)
          this.list = res.data.list
        })
      }
    },
    // 修改按钮，弹出修改框
    setUser (data, index) {
      if (typeof index === 'number') {
        // console.log(data,index)
        this.formValidate.name = data.name
        this.formValidate.username = data.username
        // this.addMessage = true
        this.setMessage = true
      } else {
        alert('请选择一项进行修改')
      }
      // console.log(data)
    },
    start (index) {
      if (typeof index === 'number') {
        var a = this.list[index].staic
        if (a === '启用') {
          this.list[index].staic = '休眠'
          this.index = ''
        }
        if (a === '休眠') {
          this.list[index].staic = '启用'
          this.index = ''
        }
        if (!a) {
          this.$Message.info('该用户状态异常')

          return false
        }
        this.$Message.info('已改为' + this.list[index].staic)
      } else {
        alert('请选择一项进行改变状态')
      }
    },
    isset (index) {
      if (this.formValidate.name && this.formValidate.username) {
        this.list[index].name = this.formValidate.name
        this.list[index].username = this.formValidate.username

        this.setMessage = false

        // 清空输入框
        this.formValidate.name = ''
        this.formValidate.username = ''
        this.showToast = false
        this.index = ''
      } else {
        this.showToast = true
      }
    },
    cancel1 () {
      alert('正在注销')
    }
  }
}
</script>

<style  scoped>
.demo-split {
  height: 50px;
  border: 1px solid #dcdee2;
}
.demo-split-pane {
  padding: 10px;
}
.btn {
  width: 50%;
  float: right;
}
.btn button {
  float: right;
  margin: 0 6px;
}
.search {
  width: 100px;
}
.pane {
  width: 100%;
  height: 50px;
  border: 1px solid #dcdee2;
  padding: 10px;
}
.addMessage1 {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 10px;
}
.addMessage1 input {
  margin-left: 15px;
}
.add {
  margin-left: 5px;
}
.test {
  margin-right: 65px;
}
.toast {
  animation: toast 1s infinite;
}
@keyframes toast {
  0% {
    color: #ccc;
  }
  50% {
    color: #f00;
  }
  100% {
    color: #ccc;
  }
}
</style>
