<template>
    <div>
        <Card :bordered="false">
            <p slot="title">搜索条件</p>
            <Row>
            <Col span="24">
              <span style="margin-right: 50px">创建时间:</span>
              <i-button v-for="(item,index) in productState" @click.stop="productBtn(index,'state',item)"
                    class="styleTitle"    :class="{isClass:num === index}" :key="item">{{item}}
              </i-button>
              <DatePicker type="daterange"   v-model='value' @on-ok='isOk'  :clearable='false' :editable="false"   confirm placement="bottom-end" v-show="isShowDate" placeholder="自定义时间" style="width: 200px">

              </DatePicker>
            </Col>
          </Row>
           <Row>
            <Col span="24">
              <span style="margin-right: 115px;"></span>
               <Button style="margin-top:20px;margin-right: 15px;" @click="changeClass('id')" :class="{isClass:id === 'id'}" icon="ios-search">搜索</Button>
                <Button style="margin-top:20px"  icon="md-refresh" @click="changeClass1('id1')" :class="{isClass:id1 === 'id1'}" >刷新</Button>
              </i-button>
            </Col>
          </Row>
        </Card>

    </div>
</template>

<script>
export default {
  data () {
    return {
      value: '',
      productState: ['全部商品', '今天', '本周', '本月', '本季度', '本年'],
      num: 0,
      id: 'id',
      id1: '',
      isShowDate: true,
      keyIndex: '',
      keyArr: [],
      monthIndex: '',
      monthArr: [],
      peopleArr: []
    }
  },

  methods: {
    productBtn (index, type, item) {
      if (type === 'state') {
        this.num = index
        // console.log(item)
        this.keyIndex = item
        this.monthIndex = item
      }
    },
    searchKey (key) {
      // 拿到搜索的关键词，请求对应的数据，总数居过滤该请求的数据，进行返回
      // 这里需要搜索接口进行关键词过滤
    },
    changeClass (id) {
      this.id = id
      this.id1 = ''
      // 当点击搜索的时候，返回数据
      if (this.keyIndex === '今天') {
        this.keyArr = [{ value: 20, name: '男' }, { value: 50, name: '女' }, { value: 10, name: '未知' }]
        // eslint-disable-next-line standard/array-bracket-even-spacing
        this.monthArr = ['', '河南', '上海', '', '陕西', '']
        this.peopleArr = [20, 40, 60, 150, 60, 20]
      }
      if (this.keyIndex === '本周') {
        this.keyArr = [{ value: 10, name: '男' }, { value: 60, name: '女' }, { value: 10, name: '未知' }]
        this.monthArr = ['', '北京', '上海', '', '陕西', '']
        this.peopleArr = [20, 30, 60, 80, 60, 20]
      }
      if (this.keyIndex === '本月') {
        this.keyArr = [{ value: 40, name: '男' }, { value: 80, name: '女' }, { value: 10, name: '未知' }]
        this.monthArr = ['广东', '北京', '河南', '', '陕西', '']
        this.peopleArr = [100, 30, 60, 30, 60, 20]
      }
      if (this.keyIndex === '本季度') {
        this.keyArr = [{ value: 50, name: '男' }, { value: 10, name: '女' }, { value: 10, name: '未知' }]
        this.monthArr = ['', '北京', '河南', '山西', '陕西', '']
        this.peopleArr = [30, 15, 60, 30, 60, 20]
      }
      if (this.keyIndex === '本年') {
        this.keyArr = [{ value: 90, name: '男' }, { value: 60, name: '女' }, { value: 10, name: '未知' }]
        this.monthArr = ['', '北京', '', '山西', '陕西', '大庆']
        this.peopleArr = [30, 15, 20, 30, 5, 20]
      }
      if (this.keyIndex === '全部商品') {
        this.keyArr = [
          { value: 10, name: '男' },
          { value: 60, name: '女' },
          { value: 27, name: '未知' }
        ]
        this.monthArr = ['广东', '', '河南', '上海', '', '陕西', '山西', '北京', '']
        this.peopleArr = [100, 20, 10, 4, 30, 80, 20, 50, 20]
      }
      // 点击搜索时,将过滤的数据返回给父组件
      var r = JSON.parse(JSON.stringify(this.keyArr))
      var k = JSON.parse(JSON.stringify(this.monthArr))
      var p = JSON.parse(JSON.stringify(this.peopleArr))
      // console.log(r)
      this.$emit('rush', r)
      this.$emit('moth', k)
      this.$emit('peop', p)
    },
    changeClass1 (id) {
      this.id1 = id
      this.id = ''
      // 点击刷新时执行的代码
      this.$emit('rush', id)
    }
    // isOk () {
    //   // console.log(this.value)
    //   // eslint-disable-next-line no-unused-vars
    //   var brr = []
    //   var crr = ''
    //   // console.log(this.value[i].split(''))
    //   if (this.value[0].length < 0) {
    //     brr = this.value[0].split('')
    //     // console.log(brr)
    //     if (brr.length === 0) {
    //       this.keyArr = [
    //         { value: 10, name: '男' },
    //         { value: 60, name: '女' },
    //         { value: 27, name: '未知' }
    //       ]
    //       this.$emit('rush', this.keyArr)
    //     }
    //   }
    //   crr = JSON.stringify(this.value[1])
    //   // console.log(crr.length)
    //   if (crr.length > 0) {
    //     this.keyArr = [{ value: 10, name: '男' }, { value: 40, name: '女' }, { value: 10, name: '未知' }]
    //     this.$emit('rush', this.keyArr)
    //   }
    // }
  }
}
</script>

<style scoped>
.isClass {
    background-color: #0092DC;
    color: #fff;

  }
  .styleTitle{
    margin: 0 5px;

  }

</style>
