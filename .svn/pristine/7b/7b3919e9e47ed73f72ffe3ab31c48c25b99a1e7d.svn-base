<template>
  <div>
    <div class="topBody">
      <Button icon="ios-add" type="primary" @click="addBus()">添加通知</Button>
    </div>
    <div class="tableText">
      <Table :loading="loading" :columns="columns" :data="newList" border/>
      <Page align="right" :total="100" show-sizer show-elevator @on-change="pageChange" style="margin-top: 10px"
            @on-page-size-change="PageSizeChange"></Page>
    </div>
    <Modal
      :title="modalTitle"
      v-model="handleModal"
      :footer-hide="true"
      @on-visible-change="handleReset('formValidate')"
    >
      <Form ref="formValidate" :model="formValidate" :rules="ruleValidate" :label-width="80">
        <FormItem :label="$t('table.sendPeople')" prop="name">
          <Input v-model="formValidate.name" :placeholder="$t('table.pleaseEnter') + $t('table.name')"></Input>
        </FormItem>
        <FormItem label="通知标题" prop="remark">
          <Input v-model="formValidate.remark" :placeholder="$t('table.pleaseEnter') + $t('table.name')"></Input>
        </FormItem>
        <FormItem label="通知内容" prop="time">
          <Input v-model="formValidate.time" :placeholder="$t('table.pleaseEnter') + $t('table.name')"></Input>
        </FormItem>
        <Form-item label="消息类型" prop="status">
          <Radio-group v-model="formValidate.infoType">
            <Radio :label="0" checked>系统消息</Radio>
            <Radio :label="1">用户通知</Radio>
          </Radio-group>
        </Form-item>
        <div align="center">
          <Button type="primary" @click="handleSubmit('formValidate')">{{$t('formButton.submit')}}</Button>
          <Button @click="handleReset('formValidate')" style="margin-left: 8px">{{$t('formButton.reset')}}</Button>
        </div>
      </Form>
    </Modal>

    <Modal
      title="用户信息"
      v-model="handleInfoModel"
      width="870"
      :footer-hide="true"
    >
      <div style="margin-top: 10px;">
        <Table @on-selection-change="onSelectionChange" :loading="loading" :columns="instationC" :data="newList" border/>
      </div>
      <div>总共{{newList.length}}项</div>
    </Modal>
  </div>
</template>
<script>

export default {
  name: 'base_unit',
  data () {
    return {
      handleModal: false,
      handleInfoModel: false,
      loading: true,
      modalTitle: '',
      newList: [],
      onInfoList: [],
      companyName: '',
      formValidate: {
        time: '',
        remark: '',
        name: '',
        author: '',
        infoType: 0
      },
      something: '',
      ruleValidate: {
        name: [{ required: true, message: '名称不能为空', trigger: 'change' }]
      },
      params: {
        page: 1,
        limit: 10
      },
      columns: [
        {
          title: '编号',
          type: 'index',
          width: 80,
          align: 'center',
          sortable: true
        },
        {
          title: '发送人',
          align: 'center',
          key: 'name'
        },
        {
          title: '通知标题',
          align: 'center',
          key: 'remark'
        },
        {
          title: '通知内容',
          align: 'center',
          key: 'time'
        },
        {
          title: '消息类型',
          align: 'center',
          key: 'status',
          render: (h, params) => {
            return h('span', params.row.infoType === 0 ? '系统消息' : '用户通知')
          }
        },
        {
          title: '是否发送',
          align: 'center',
          key: 'status',
          render: (h, params) => {
            return h('div', [
              h('span', {}, '状态:'),
              h('span', {
                style: {
                  color: 'red',
                  marginRight: '10px',
                  marginLeft: '10px'
                }
              }, params.row.author),
              h('Button', {
                props: {
                  type: 'primary',
                  size: 'small'
                },
                on: {
                  click: () => {
                    this.$Modal.confirm({
                      title: this.$t('message.title'),
                      okText: this.$t('message.yesSend'),
                      cancelText: this.$t('message.thinkAboutIt'),
                      content: '<p>您确定要发送这条信息吗？</p><p>发送后将无法撤回，请谨慎操作！</p>'
                    })
                  }
                }
              }, '立即发送')
            ])
          }
        },
        {
          title: '操作',
          key: 'action',
          width: 100,
          align: 'center',
          render: (h, params) => {
            return h('div', [
              h('Dropdown', {
                props: {
                  trigger: 'click'
                },
                on: {
                  'on-click': (value) => {
                    console.log(value)
                    if (value === 'info') {
                      this.infoModel(params.index)
                    } else if (value === 'edit') {
                      this.editBus(params.row, params.index)
                    } else {
                      this.remove(params.row, params.index)
                    }
                  }
                }
              },
              [h('Button', {
                props: {
                  type: 'primary',
                  size: 'small'
                }
              },
              [
                h('span', '操作'),
                h('Icon', {
                  props: {
                    type: 'md-arrow-dropdown'
                  }
                })
              ]),
              h('DropdownMenu', {
                slot: 'list'
              },
              [
                h('DropdownItem', {
                  props: {
                    name: 'info'
                  }
                }, '用户信息'),
                h('DropdownItem', {
                  props: {
                    name: 'edit'
                  }
                }, '编辑'),
                h('DropdownItem', {
                  props: {
                    name: 'remove'
                  }
                }, '删除')
              ])
              ])
            ])
          }

        }
      ],
      tableData: [
        {
          time: '2016-10-03',
          remark: '87987987987',
          name: '曾厉害',
          author: '未发送',
          infoType: 0
        },
        {
          time: '2016-10-03',
          remark: '87987987987',
          name: '曾厉害',
          author: '未发送',
          infoType: 1
        },
        {
          time: '2016-10-03',
          remark: '87987987987',
          name: '曾厉害',
          author: '未发送',
          infoType: 0
        },
        {
          time: '2016-10-03',
          remark: '87987987987',
          name: '曾厉害',
          author: '未发送',
          infoType: 1
        },
        {
          time: '2016-10-03',
          remark: '87987987987',
          name: '曾厉害',
          author: '未发送',
          infoType: 1
        }
      ],
      instationC: [
        {
          title: '编号',
          type: 'index',
          align: 'center'
        },
        {
          title: '微信用户名称',
          align: 'center',
          key: 'name'
        },
        {
          title: '头像',
          align: 'center',
          key: 'name'
        },
        {
          title: '性别',
          width: 300,
          align: 'center',
          key: 'name'
        }
      ]
    }
  },
  methods: {
    PageSizeChange (limit) {
      this.params.limit = limit
    },
    pageChange (page) {
      this.params.page = page
    },
    infoModel () {
      this.handleInfoModel = true
    },
    search () {
      let len = this.tableData
      let arr = []
      for (let i in len) {
        if (len[i].name === this.companyName) {
          arr.push(len[i])
        } else if (this.companyName === '') {
          this.newList = this.tableData
          return
        }
      }
      this.newList = arr
    },
    addBus () {
      this.handleModal = true
      this.modalTitle = '新增'
    },
    editBus (item, index) {
      this.handleModal = true
      this.modalTitle = '修改'
      this.itemIndex = index
      this.formValidate = JSON.parse(JSON.stringify(item))
    },

    handleSubmit (name) {
      this.$refs[name].validate(valid => {
        if (valid) {
          let params = JSON.parse(JSON.stringify(this.formValidate))
          if (this.modalTitle === '新增') {
            this.$Message.success(this.$t('message.addSuccess'))
            this.newList.unshift(params)
          } else {
            this.$set(this.newList, this.itemIndex, params)
            this.$Message.success(this.$t('message.editSuccess'))
          }
          this.handleModal = false
        } else {
          if (this.modalTitle === '新增') {
            this.$Message.error(this.$t('message.addError'))
          } else {
            this.$Message.error(this.$t('message.editError'))
          }
        }
      })
    },
    handleReset (name) {
      this.$refs[name].resetFields()
    },
    remove (index) {
      this.$Modal.warning({
        title: this.$t('message.title'),
        content: this.$t('message.delete'),
        onOk: () => {
          this.newList.splice(index, 1)
        }
      })
    },
    onSelectionChange (row) {
      this.onInfoList = row
    }
  },
  mounted () {
    this.newList = this.tableData
    setTimeout(() => {
      this.loading = false
    }, 1000)
  }
}
</script>
